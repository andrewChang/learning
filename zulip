### golang代理
> puppet/zulip/manifests/golang.pp：https://golang.org/dl 替换为 https://mirrors.ustc.edu.cn/golang

### 安装命令
>./scripts/setup/install --self-signed-cert     --email=ruelang@126.com --hostname=150.158.32.245

安装命令中可以带两种参数：
  --cerbot：用于线上product环境搭建，需要有域名SSL证书；
  --self-signed-cert：用于测试服务器搭建，Zulip安装程序会生成只签名SSL证书，需要确保安装OpenSSL。
 ### 安装命令（不安装数据库）
 ./scripts/setup/install --self-signed-cert     --email=ruelang@126.com --hostname=150.158.32.245 --no-init-db --postgresql-missing-dictionaries

Success!
Stopping because --no-init-db was passed.  To complete the
installation, configure PostgreSQL by creating the database and
database user, and then run:

### 数据库刷表，初始化动作
> su postgres -c 'psql -f scripts/setup/create-db.sql'

> su zulip -c '/home/zulip/deployments/current/scripts/setup/initialize-database'
> su zulip -c '/home/zulip/deployments/current/manage.py generate_realm_creation_link'

### SSL证书搞定前，可以在 Chrome 启动时加上 --ignore-certificate-errors  规避证书的问题，详情见如下：
> https://cloud.tencent.com/developer/article/1656694
   
>
### Autodl 自定义服务端口 6006
> http://region-7.seetacloud.com:14518/

### 修改ngix端口

> sudo vim /etc/nginx/sites-available/zulip-enterprise

> include /etc/nginx/zulip-include/upstreams;
 server {
    listen 81;
    location /local-static {
        alias /home/zulip/local-static;
    }
    include /etc/zulip/nginx_sharding.conf;
    include /etc/nginx/zulip-include/app;
 }
 
 ### root用户下执行
 > supervisorctl status
 > supervisorctl restart all
 > supervisorctl stop all
### root用户下，修改配置后，使配置生效执行如下指令
> /etc/zulip/zulip.conf 修改配置文件
> /home/zulip/deployments/current/scripts/zulip-puppet-apply
### ./stop-server报PermissionError: [Errno 13] Permission denied
> 修改方法：chmod 777 /var/run/supervisor.sock

### 重启ngix
> vi /etc/nginx/sites-available/zulip-enterprise
> vi /etc/zulip/zulip.conf
> nginx -s reload

### 启动postgreSql
> service postgresql start
### 关闭postgreSql
> service postgresql stop
### 查看postgreSql状态
> service postgresql status

### 更新nginx配置
> /home/zulip/deployments/current/scripts/zulip-puppet-apply
### 启动zulip服务
> su zulip -c '/home/zulip/deployments/current/scripts/restart-server'

### 用户登录
> psql -U zulip -d zulip -h 127.0.0.1 -p 5432
> CREATE USER zulip WITH PASSWORD 'zulip';
> CREATE DATABASE zulip OWNER zulip;
> GRANT ALL PRIVILEGES ON DATABASE zulip to zulip;

### 其他命令
> \l：列出所有数据库
> \c [database_name]
> \d：列出当前数据库的所有表格
> \d [table_name]
> \dn 查看所有模式(schema)
> \du：列出所有用户
> create schema zulip; 创建模式(schema)
> CREATE TABLE zulip.zerver_message(name VARCHAR(20), signup_date DATE);创建指定模式下的表
> SET search_path TO zulip,'$user',public; 设置模式查询顺序
> show search_path; 查询模式顺序
> select current_user,current_schema,current_database(); 查看当前用户、模式、数据库

### 生成ssl自签名证书
openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout server.key -out server.crt
The most important line is the one that requests the Common Name (e.g. server FQDN or YOUR name). 
You need to enter the domain name associated with your server or, more likely, your server’s public IP address.


### 编辑 /etc/nginx/sites-available 并重新加载 nginx -s reload or 重启：service nginx restart 关闭：service nginx stop
server {
        listen 80;
        listen [::]:80;
        location / {
                return 301 https://$host$request_uri;
        }
}

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name 150.158.32.245;
        ssl_certificate /etc/nginx/ssl/150.158.32.245.crt;
        ssl_certificate_key /etc/nginx/ssl/150.158.32.245.key;
        location / {
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header Host $http_host;
           proxy_http_version 1.1;
           proxy_buffering off;
           proxy_read_timeout 20m;
           proxy_pass http://150.158.32.245:80;
        }
}
### SSL 证书依赖DNS域名验证，或者可以通过zerossl进行IP SSL申请，腾讯云有免费的DV SSL但是要抢，zerossl可以注册3个月的免费IP SSL
>  SSL证书验证方式的考虑：SSL证书有三种验证方式，DV SSL证书（域名验证）、OV SSL证书（组织验证）、EV SSL证书（扩展验证），区别如下：

>  DV SSL证书（域名验证）：只验证域名所有权，10分钟快速颁发，价格便宜，适合个人用户、小型企业申请安装；

>　OV SSL证书（组织验证）：验证域名所有权和申请组织的真实身份，可在证书详情里查看申请企业名称，适合企业型用户申请安装；

>  EV SSL证书（扩展验证）：最高级别验证，验证域名所有权、企业真实合法信息、电话回访等等验证，可在浏览器地址栏显示绿色企业名称。

### linux查询命令
> grep -r prod-static .
> find . -name "name.*" 

### uwsgi 配置文件
> vi /etc/zulip/uwsgi.ini

### 安装uwsgi
> conda install -c conda-forge uwsgi
### 安装lsof
> conda install -c conda-forge lsof
### 安装tornado
> conda install -c conda-forge tornado
### linux查看进程监听的端口号（包括进程的名字，pid，监听的端口号等）
> lsof -i.
> lsof -i:端口号
> netstat -tunlp | grep 端口号

### nginx Location 匹配规则 [ = | ~ | ~* | ^~ ]
> = 表示精确匹配
> ~ 表示区分大小写的正则匹配
> ~* 表示不区分大小写的正则匹配
> ^~ 表示 uri 以某个字符串开头
> 匹配顺序：
> location 的定义分为两种：
> - 前缀字符串（prefix string）
> - 正则表达式（regular expression），具体为前面带 ~* 和 ~ 修饰符的
> 而匹配 location 的顺序为：
> - 检查使用前缀字符串的 locations，在使用前缀字符串的 locations 中选择最长匹配的，并将结果进行储存
> - 如果符合带有 = 修饰符的 URI，则立刻停止匹配
> - 如果符合带有  ^~ 修饰符的 URI，则也立刻停止匹配。
> - 然后按照定义文件的顺序，检查正则表达式，匹配到就停止
> - 当正则表达式匹配不到的时候，使用之前储存的前缀字符串
> 再总结一下就是：
> - 在顺序上，前缀字符串顺序不重要，按照匹配长度来确定，正则表达式则按照定义顺序。
> - 在优先级上，= 修饰符最高，^~ 次之，再者是正则，最后是前缀字符串匹配。
